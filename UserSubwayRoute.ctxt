#BlueJ class context
comment0.target=UserSubwayRoute
comment1.params=
comment1.target=UserSubwayRoute()
comment1.text=\n\ Constructor\ to\ build\ the\ queue\ stations\ for\ the\ user's\ route,\ using\n\ instances\ of\ the\ SubwayGraph\ and\ TravelPreferences\n
comment10.params=
comment10.target=java.lang.String\ displayDestinations()
comment10.text=\n\ Displays\ formatted\ string\ of\ the\ current\ list\ of\ destinations.\n\ \n\ @return\ string\n
comment11.params=s
comment11.target=java.lang.String\ getAssociatedDestinations(java.lang.String)
comment11.text=\n\ Gets\ the\ associated\ user-chosen\ destinations\ of\ a\ given\ subway\ station,\ and\ formats\n\ it\ into\ a\ string\n\ @return\ string\n
comment2.params=
comment2.target=void\ setStartStation()
comment2.text=\n\ Retrieves\ the\ start\ station,\ either\ from\ user\ input\ or\ from\ the\ default.\n\ \n\ @return\ void\n
comment3.params=
comment3.target=java.lang.String\ getStartStation()
comment3.text=\n\ Returns\ the\ start\ station\ of\ the\ current\ subway\ route\n\ @return\ String\n
comment4.params=
comment4.target=SubwayGraph\ getSubwayGraph()
comment4.text=\n\ Returns\ the\ subway\ graph\ object\ that\ the\ subway\ route\ is\ traversing\n\ @return\ SubwayGraph\ graph\n
comment5.params=
comment5.target=java.util.Hashtable\ getHash()
comment5.text=\n\ Returns\ the\ hashtable\ that\ saves\ the\ subway\ station\ and\ the\ user-chosen\ \n\ destinations\ associated\ with\ it.\ The\ vector\ key\ is\ to\ save\ multiple\ user-chosen\ \n\ destinations,\ if\ it\ happens.\n\ \n\ @return\ Hashtable<String,\ Vector<String>>\n
comment6.params=
comment6.target=java.util.Vector\ efficientPath()
comment6.text=\n\ Returns\ a\ vector\ of\ subway\ station\ names,\ in\ the\ most\ efficient\ \n\ path\ based\ on\ each\ station's\ respective\ distance\ from\ the\ start\ (from\ closest\n\ to\ farthest).\n\ \n\ @return\ vector\ of\ strings,\ each\ unit\ being\ the\ name\ of\ a\ station\ in\ sorted\ order\n
comment7.params=
comment7.target=java.util.Vector\ getFinalDestinations()
comment7.text=\n\ Returns\ vector\ of\ specified\ destinations\n\ \n\ @return\ vector\n
comment8.params=current
comment8.target=java.util.Vector\ listChoices(LinkedQuaternaryTree)
comment8.text=\n\ Gets\ the\ children\ (subtrees)\ of\ the\ provided\ linked\ quaternary\ tree,\ and\ returns\ a\ vector\n\ containing\ them.\ If\ a\ child\ doesn't\ exist,\ it's\ saved\ in\ the\ vector\ as\ a\ null\ object.\n\ \n\ @param\ LinkedQuaternaryTree\ parent\n\ @return\ Vector\ of\ the\ parent's\ children\n
comment9.params=
comment9.target=void\ startTree()
comment9.text=\n\ Starts\ the\ decision\ tree\ for\ the\ user.\ Prints\ out\ each\ option\ and\ its\ respective\n\ children,\ and\ allows\ the\ user\ to\ choose\ their\ own\ traversal\ of\ the\ tree\ and\ add\n\ their\ desired\ destinations\ at\ the\ end.\ Provides\ the\ option\ to\ add\ more\ destinations\n\ and\ re-traverse\ the\ tree.\n
numComments=12
